<views:View x:Class="AxoCover.Views.TestExplorerView" x:TypeArguments="viewModels:TestExplorerViewModel"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.11.0"
            xmlns:converters="clr-namespace:AxoCover.Converters"
            xmlns:viewModels="clr-namespace:AxoCover.ViewModels"
            xmlns:views="clr-namespace:AxoCover.Views"
            xmlns:controls="clr-namespace:AxoCover.Controls"
            xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework"
            xmlns:res="clr-namespace:AxoCover"
            mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <converters:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
    <converters:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter"/>

    <HierarchicalDataTemplate x:Key="TestItemTemplate" DataType="{x:Type viewModels:TestItemViewModel}" ItemsSource="{Binding Children}">
      <Border Background="Transparent">
        <Border.InputBindings>
          <MouseBinding MouseAction="LeftDoubleClick" 
                        Command="{Binding DataContext.NavigateToTestItemCommand, Source={x:Reference _testTreeView}}"
                        CommandParameter="{Binding CodeItem}"/>
        </Border.InputBindings>
        <DockPanel Margin="1,3">
          <Grid DockPanel.Dock="Left" Margin="0,0,3,0" Opacity="{Binding IsStateUpToDate, Converter={StaticResource BooleanToOpacityConverter}}">
            <Image Source="{Binding IconPath}"/>
            <Image Stretch="Uniform" Width="9" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                   Source="{Binding OverlayIconPath}" 
                   Visibility="{Binding OverlayIconPath, Converter={StaticResource NullToVisibilityConverter}}"/>
          </Grid>
          <TextBlock x:Name="_testCountIndicator" DockPanel.Dock="Right" Margin="3,0,0,0"
                     Text="{Binding CodeItem.TestCount, StringFormat={}({0})}"/>
          <TextBlock Text="{Binding CodeItem.Name}"/>
        </DockPanel>
      </Border>
      <HierarchicalDataTemplate.Triggers>
        <DataTrigger Binding="{Binding CodeItem.Kind}" Value="Method">
          <Setter TargetName="_testCountIndicator" Property="Visibility" Value="Collapsed"/>
        </DataTrigger>
      </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="ResultItemTemplate" DataType="{x:Type viewModels:CoverageItemViewModel}" ItemsSource="{Binding Children}">
      <Border Background="Transparent">
        <Border.InputBindings>
          <MouseBinding MouseAction="LeftDoubleClick" 
                        Command="{Binding DataContext.NavigateToCoverageItemCommand, Source={x:Reference _testTreeView}}"
                        CommandParameter="{Binding CodeItem}"/>
        </Border.InputBindings>
        <DockPanel Margin="1,3">
          <Image Source="{Binding IconPath}" Margin="0,0,3,0" DockPanel.Dock="Left"/>
          <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
            <Image Source="/AxoCover;component/Resources/branch.png" Stretch="Uniform" Width="9" Margin="3,0,0,0"/>
            <TextBlock Text="{Binding BranchCoverage, StringFormat={}{0:F2}%}" Margin="3,0,0,0"/>
            <TextBlock Text="{Binding UncoveredBranchPoints, StringFormat={}({0})}" Margin="3,0,0,0"/>
            <Image Source="/AxoCover;component/Resources/sequence.png" Stretch="Uniform" Width="9" Margin="3,0,0,0"/>
            <TextBlock Text="{Binding SequenceCoverage, StringFormat={}{0:F2}%}" Margin="3,0,0,0"/>
            <TextBlock Text="{Binding UncoveredSequencePoints, StringFormat={}({0})}" Margin="3,0,0,0"/>
          </StackPanel>
          <TextBlock Text="{Binding CodeItem.Name}"/>
        </DockPanel>
      </Border>
    </HierarchicalDataTemplate>
  </UserControl.Resources>

  <DockPanel x:Name="_root" Visibility="{Binding IsSolutionLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
    <!-- Toolbar -->
    <ToolBar DockPanel.Dock="Top">
      <controls:ActionButton Icon="/AxoCover;component/Resources/expand.png" Command="{Binding ExpandAllCommand}"/>
      <controls:ActionButton Icon="/AxoCover;component/Resources/collapse.png" Command="{Binding CollapseAllCommand}"/>
      <controls:ActionButton Text="{x:Static res:Resources.Refresh}" Icon="/AxoCover;component/Resources/refresh.png" Command="{Binding BuildCommand}"/>
      <controls:ActionButton Text="{x:Static res:Resources.RunTests}" Icon="/AxoCover;component/Resources/test.png" Command="{Binding RunTestsCommand}"/>
      <controls:ActionButton Text="{x:Static res:Resources.AutoCover}" Icon="/AxoCover;component/Resources/autocover.png" IsToggle="True" IsChecked="{Binding IsAutoCoverEnabled}" IsEnabled="{Binding IsItemSelected}"/>
      <controls:ActionButton Text="{x:Static res:Resources.ShowCoverage}" Icon="/AxoCover;component/Resources/highlight.png" IsToggle="True" IsChecked="{Binding IsHighlighting}"/>
      <controls:ActionButton Text="{x:Static res:Resources.Coverage}" Icon="/AxoCover;component/Resources/coverage.png" IsToggle="True" IsChecked="{Binding IsShowingCoverage}" IsEnabled="{Binding ResultSolution, Converter={StaticResource NullToBooleanConverter}}"/>
      <controls:ActionButton Text="{x:Static res:Resources.Settings}" Icon="/AxoCover;component/Resources/settings.png" IsToggle="True" IsChecked="{Binding IsShowingSettings}"/>
    </ToolBar>

    <!-- Status bar -->
    <Grid DockPanel.Dock="Bottom" Background="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarGradientBrushKey}}">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <DockPanel Margin="3">
        <ToolBar DockPanel.Dock="Right" ItemsSource="{Binding StateGroups}">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <controls:ActionButton Text="{Binding Count}" Icon="{Binding IconPath}" IsChecked="{Binding IsSelected}"
                                     CommandParameter="{Binding}" Command="{Binding DataContext.SelectStateGroupCommand, Source={x:Reference _root}}"/>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ToolBar>
        <TextBlock Text="{Binding StatusMessage}" VerticalAlignment="Center"/>
      </DockPanel>
      <ProgressBar x:Name="_progressBar" Grid.Row="1" VerticalAlignment="Bottom" Height="3" Background="Transparent" BorderThickness="0" 
                   IsIndeterminate="{Binding IsProgressIndeterminate}"
                   Value="{Binding Progress}" Maximum="1"
                   Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
    
    <!-- Manin view -->
    <Grid>
      <!-- Tree view -->
      <DockPanel>
        <controls:SearchBox DockPanel.Dock="Top" x:Name="_searchBox"
                            PlaceholderText="{x:Static res:Resources.TestSearchPlaceholder}"
                            Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"
                            TextChanged="OnSearchTextChanged"/>
        <views:TestDetailsView DockPanel.Dock="Bottom" SelectedItem="{Binding SelectedItem}"/>
        <Grid>
          <TreeView x:Name="_testTreeView" Background="Transparent" BorderThickness="0" SelectedItemChanged="OnSelectedItemChanged"
                    ItemsSource="{Binding TestSolution.Children}" 
                    ItemTemplate="{StaticResource TestItemTemplate}">
            <TreeView.ItemContainerStyle>
              <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                <EventSetter Event="Selected" Handler="OnItemSelected"/>
              </Style>
            </TreeView.ItemContainerStyle>
          </TreeView>
          <ListBox ItemsSource="{Binding TestList}"
                   ItemTemplate="{StaticResource TestItemTemplate}"
                   SelectedItem="{Binding SelectedItem}"
                   Visibility="{Binding IsFiltering, ElementName=_searchBox, Converter={StaticResource BooleanToVisibilityConverter}}">
            <ListBox.ItemContainerStyle>
              <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                <EventSetter Event="Selected" Handler="OnItemSelected"/>
              </Style>
            </ListBox.ItemContainerStyle>
          </ListBox>
        </Grid>        
      </DockPanel>

      <!-- Group list view -->
      <Border Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
              Visibility="{Binding IsStateGroupSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
        <ItemsControl ItemsSource="{Binding StateGroups}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <Grid/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <DockPanel Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                <views:TestDetailsView SelectedItem="{Binding SelectedItem, ElementName=_listBox}" DockPanel.Dock="Bottom"/>
                <ListBox x:Name="_listBox" ItemsSource="{Binding Items}" Background="Transparent" BorderThickness="0">
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <DockPanel>
                        <Image DockPanel.Dock="Left" Source="/AxoCover;component/Resources/test.png" Stretch="None"/>
                        <TextBlock Margin="3,0,0,0" Text="{Binding CodeItem.Name}" VerticalAlignment="Center"/>
                      </DockPanel>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ListBox>
              </DockPanel>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </Border>
      
      <!-- Coverage view -->
      <TreeView x:Name="_resultTreeView" BorderThickness="0"
                Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                ItemsSource="{Binding ResultSolution.Children}" 
                ItemTemplate="{StaticResource ResultItemTemplate}"
                Visibility="{Binding IsShowingCoverage, Converter={StaticResource BooleanToVisibilityConverter}}">
        <TreeView.ItemContainerStyle>
          <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
          </Style>
        </TreeView.ItemContainerStyle>
      </TreeView>

      <!-- Settings view -->
      <ScrollViewer Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                    Visibility="{Binding IsShowingSettings, Converter={StaticResource BooleanToVisibilityConverter}}"
                    VerticalScrollBarVisibility="Auto">
        <StackPanel Margin="6">
          <TextBlock Text="{x:Static res:Resources.OutputDirectories}"/>
          <ItemsControl ItemsSource="{Binding TestSolution.Children}" Margin="0,6,0,0">
            <ItemsControl.ItemTemplate>
              <DataTemplate>
                <DockPanel>
                  <controls:ActionButton x:Name="_cleanButton" DockPanel.Dock="Right" Margin="3,0,0,0"
                                         Text="{Binding Output.Size, StringFormat={}{0:F2} MB}"
                                         Icon="/AxoCover;component/Resources/clean.png"
                                         CommandParameter="{Binding Output}"
                                         Command="{Binding DataContext.CleanTestOutputCommand, Source={x:Reference _root}}"
                                         IsEnabled="{Binding Output, Converter={StaticResource NullToBooleanConverter}}"/>
                  <controls:ActionButton DockPanel.Dock="Right" Margin="3,0,0,0"
                                         Icon="/AxoCover;component/Resources/open.png"
                                         CommandParameter="{Binding CodeItem.OutputDirectory}"
                                         Command="{Binding DataContext.OpenPathCommand, Source={x:Reference _root}}"/>
                  <TextBlock VerticalAlignment="Center" Opacity="0.7" TextTrimming="CharacterEllipsis">
                    <TextBlock.Text>
                      <MultiBinding StringFormat="{}{0} - {1}">
                        <Binding Path="CodeItem.Name"/>
                        <Binding Path="CodeItem.OutputDirectory"/>
                      </MultiBinding>
                    </TextBlock.Text>
                  </TextBlock>
                </DockPanel>
                <DataTemplate.Triggers>
                  <DataTrigger Binding="{Binding Output, Converter={StaticResource NullToBooleanConverter}}" Value="False">
                    <Setter TargetName="_cleanButton" Property="Text" Value="{x:Static res:Resources.CalculatingOutputSize}"/>
                  </DataTrigger>
                </DataTemplate.Triggers>
              </DataTemplate>   
            </ItemsControl.ItemTemplate>
          </ItemsControl>
          <DockPanel Margin="0,12,0,0">
            <controls:ActionButton Text="{x:Static res:Resources.Clear}" Command="{Binding ClearTestSettingsCommand}" 
                                   DockPanel.Dock="Right" Icon="/AxoCover;component/Resources/clear.png"/>
            <TextBlock Text="{x:Static res:Resources.TestSettings}" VerticalAlignment="Center"/>
          </DockPanel>
          <ListBox Margin="0,3,0,0" ItemsSource="{Binding TestSettingsFiles}" SelectedValue="{Binding SelectedTestSettings}">
            <ListBox.ItemTemplate>
              <DataTemplate>
                <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding}"/>
              </DataTemplate>
            </ListBox.ItemTemplate>
          </ListBox>
        </StackPanel>
      </ScrollViewer>
    </Grid>    
  </DockPanel>
</views:View>
