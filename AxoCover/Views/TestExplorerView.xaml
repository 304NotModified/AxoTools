<views:View x:Class="AxoCover.Views.TestExplorerView" x:TypeArguments="viewModels:TestExplorerViewModel"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.11.0"
            xmlns:converters="clr-namespace:AxoCover.Converters"
            xmlns:viewModels="clr-namespace:AxoCover.ViewModels"
            xmlns:views="clr-namespace:AxoCover.Views"
            xmlns:controls="clr-namespace:AxoCover.Controls"
            xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework"
            xmlns:res="clr-namespace:AxoCover"
            Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}"
            mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Style.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
      <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
      <converters:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter"/>
    </ResourceDictionary>
  </UserControl.Resources>

  <DockPanel x:Name="_root">
    <!-- Toolbar -->
    <controls:ToolBar DockPanel.Dock="Top" Visibility="{Binding IsSolutionLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
      <controls:Button Icon="/AxoCover;component/Resources/expand.png" Command="{Binding ExpandAllCommand}"/>
      <controls:Button Icon="/AxoCover;component/Resources/collapse.png" Command="{Binding CollapseAllCommand}"/>
      <controls:Button Text="{x:Static res:Resources.Refresh}" Icon="/AxoCover;component/Resources/refresh.png" Command="{Binding BuildCommand}"/>
      <controls:Button Text="{x:Static res:Resources.RunTests}" Icon="/AxoCover;component/Resources/test.png" Command="{Binding RunTestsCommand}"/>
      <controls:Button Text="{x:Static res:Resources.AutoCover}" Icon="/AxoCover;component/Resources/autocover.png" IsToggle="True" IsChecked="{Binding IsAutoCoverEnabled}" IsEnabled="{Binding IsItemSelected}"/>
      <controls:Button Text="{x:Static res:Resources.ShowCoverage}" Icon="/AxoCover;component/Resources/highlight.png" IsToggle="True" IsChecked="{Binding IsHighlighting}"/>
    </controls:ToolBar>

    <!-- Status bar -->
    <Grid DockPanel.Dock="Bottom" Background="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarGradientBrushKey}}">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <DockPanel Margin="3">
        <controls:Button x:Name="_searchButton" DockPanel.Dock="Right" Icon="/AxoCover;component/Resources/search.png" IsToggle="True"/>
        <controls:ToolBar DockPanel.Dock="Right" ItemsSource="{Binding StateGroups}">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <controls:Button Text="{Binding Count}" Icon="{Binding IconPath}" IsChecked="{Binding IsSelected}"
                               CommandParameter="{Binding}" Command="{Binding DataContext.SelectStateGroupCommand, Source={x:Reference _root}}"/>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </controls:ToolBar>
        <TextBlock Text="{Binding StatusMessage}" VerticalAlignment="Center"/>
      </DockPanel>
      <ProgressBar x:Name="_progressBar" Grid.Row="1" VerticalAlignment="Bottom" Height="3" Background="Transparent" BorderThickness="0" 
                   IsIndeterminate="{Binding IsProgressIndeterminate}"
                   Value="{Binding Progress}" Maximum="1"
                   Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
    
    <!-- Manin view -->
    <Grid>
      <!-- Tree view -->
      <DockPanel>
        <views:TestDetailsView DockPanel.Dock="Bottom" SelectedItem="{Binding SelectedItem}"/>
        <TreeView x:Name="_testTreeView" Background="Transparent" BorderThickness="0"
                  ItemsSource="{Binding TestSolution.Children}" SelectedItemChanged="OnSelectedItemChanged">
          <TreeView.ItemTemplate>
            <HierarchicalDataTemplate DataType="{x:Type viewModels:TestItemViewModel}" ItemsSource="{Binding Children}">
              <Border Background="Transparent">
                <Border.InputBindings>
                  <MouseBinding MouseAction="LeftDoubleClick" 
                                Command="{Binding DataContext.NavigateToTestItemCommand, Source={x:Reference _testTreeView}}"
                                CommandParameter="{Binding TestItem}"/>
                </Border.InputBindings>
                <DockPanel Margin="1,3">
                  <Grid DockPanel.Dock="Left" Margin="0,0,3,0" Opacity="{Binding IsStateUpToDate, Converter={StaticResource BooleanToOpacityConverter}}">
                    <Image Source="{Binding IconPath}"/>
                    <Image Stretch="Uniform" Width="9" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                           Source="{Binding OverlayIconPath}" 
                           Visibility="{Binding OverlayIconPath, Converter={StaticResource NullToVisibilityConverter}}"/>
                  </Grid>
                  <TextBlock x:Name="_testCountIndicator" DockPanel.Dock="Right" Margin="3,0,0,0"
                             Text="{Binding TestItem.TestCount, StringFormat={}({0})}"/>
                  <TextBlock Text="{Binding TestItem.Name}"/>
                </DockPanel>
              </Border>
              <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding TestItem.Kind}" Value="Method">
                  <Setter TargetName="_testCountIndicator" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
              </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>
          </TreeView.ItemTemplate>
          <TreeView.ItemContainerStyle>
            <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
              <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
              <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
              <EventSetter Event="Selected" Handler="OnItemSelected"/>
            </Style>
          </TreeView.ItemContainerStyle>
        </TreeView>
      </DockPanel>

      <!-- Group list view -->
      <Border Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
              Visibility="{Binding IsStateGroupSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
        <ItemsControl ItemsSource="{Binding StateGroups}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <Grid/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <DockPanel Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                <views:TestDetailsView SelectedItem="{Binding SelectedItem, ElementName=_listBox}" DockPanel.Dock="Bottom"/>
                <controls:ListBox x:Name="_listBox" ItemsSource="{Binding Items}" Background="Transparent" BorderThickness="0">
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <DockPanel>
                        <Image DockPanel.Dock="Left" Source="/AxoCover;component/Resources/test.png" Stretch="None"/>
                        <TextBlock Margin="3,0,0,0" Text="{Binding TestItem.Name}" VerticalAlignment="Center"/>
                      </DockPanel>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </controls:ListBox>
              </DockPanel>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </Border>
      
      <!-- Search view -->
      <DockPanel Visibility="{Binding IsChecked, ElementName=_searchButton, Converter={StaticResource BooleanToVisibilityConverter}}">
        <views:TestDetailsView DockPanel.Dock="Bottom"
                               SelectedItem="{Binding SelectedItem, ElementName=_listView}"/>
        <views:TestListView x:Name="_listView"
                            TestSolution="{Binding TestSolution}"/>
      </DockPanel>      
    </Grid>    
  </DockPanel>
</views:View>
