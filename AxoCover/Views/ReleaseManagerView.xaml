<views:View x:Class="AxoCover.Views.ReleaseManagerView"
            x:TypeArguments="viewModels:ReleaseManagerViewModel"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:converters="clr-namespace:AxoCover.Converters"
            xmlns:controls="clr-namespace:AxoCover.Controls"
            xmlns:models="clr-namespace:AxoCover.Models"
            xmlns:viewModels="clr-namespace:AxoCover.ViewModels"
            xmlns:views="clr-namespace:AxoCover.Views"
            xmlns:res="clr-namespace:AxoCover"
            mc:Ignorable="d" 
            d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <Style x:Key="SubHeader" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
      <Setter Property="Margin" Value="3"/>
      <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="Description" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
      <Setter Property="Margin" Value="3"/>
      <Setter Property="Opacity" Value="0.7"/>
      <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
    <converters:BooleanInverter x:Key="BooleanInverter"/>
  </UserControl.Resources>
  <StackPanel>
    <CheckBox Content="{x:Static res:Resources.IsUpdatingAutomatically}" IsChecked="{Binding IsUpdatingAutomatically}" Margin="3"/>
    <DockPanel Visibility="{Binding IsUpdatingAutomatically, Converter={StaticResource BooleanToVisibilityConverter}}">
      <Image Source="/AxoCover;component/Resources/warning.png" Stretch="None" DockPanel.Dock="Left" Margin="3"/>
      <TextBlock Text="{x:Static res:Resources.AutoUpdateWarning}" Style="{StaticResource Description}"/>
    </DockPanel>
    <Separator/>

    <StackPanel Visibility="{Binding IsUpdateAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
      <TextBlock Text="{x:Static res:Resources.BranchesDescription}" Style="{StaticResource Description}"/>
      <DockPanel>
        <Button DockPanel.Dock="Right" Margin="3"
                Content="{x:Static res:Resources.InstallUpdate}"
                Command="{Binding InstallUpdateCommand}"/>
        <ComboBox Margin="3" VerticalAlignment="Center"
                  ItemsSource="{Binding UpdateReleases}" 
                  SelectedItem="{Binding UpdateRelease, Mode=TwoWay}">
          <ComboBox.ItemTemplate>
            <DataTemplate>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image Source="/AxoCover;component/Resources/branch.png" VerticalAlignment="Center" Margin="3"/>
                <TextBlock Grid.Column="1" Text="{Binding Branch}" VerticalAlignment="Center" Margin="3"/>
                <TextBlock Grid.Column="2" Text="{Binding Version}" VerticalAlignment="Center" Margin="3"/>
              </Grid>
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>      
      </DockPanel>
    
      <TextBlock>
        <TextBlock.Style>
          <Style TargetType="TextBlock" BasedOn="{StaticResource Description}">
            <Setter Property="Text" Value="{x:Static res:Resources.FeatureBranchDescription}"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding UpdateRelease.Branch}" Value="release">
                <Setter Property="Text" Value="{x:Static res:Resources.ReleaseBranchDescription}"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding UpdateRelease.Branch}" Value="master">
                <Setter Property="Text" Value="{x:Static res:Resources.DevelopmentBranchDescription}"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </TextBlock.Style>
      </TextBlock>
      <Separator/>
    </StackPanel>    

    <StackPanel Visibility="{Binding IsRollbackAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
      <TextBlock Text="{x:Static res:Resources.RollbackDescription}" Style="{StaticResource Description}"/>
      <DockPanel>
        <Button DockPanel.Dock="Right" Margin="3"
                Content="{x:Static res:Resources.Rollback}"
                Command="{Binding RollbackUpdateCommand}"/>
        <ComboBox Margin="3" VerticalAlignment="Center"
                  ItemsSource="{Binding RollbackReleases}" 
                  SelectedItem="{Binding RollbackRelease, Mode=TwoWay}">
          <ComboBox.ItemTemplate>
            <DataTemplate>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image Source="/AxoCover;component/Resources/package.png" VerticalAlignment="Center" Margin="3"/>
                <TextBlock Grid.Column="1" Text="{Binding Branch}" VerticalAlignment="Center" Margin="3"/>
                <TextBlock Grid.Column="2" Text="{Binding Version}" VerticalAlignment="Center" Margin="3"/>
              </Grid>
            </DataTemplate>
          </ComboBox.ItemTemplate>
        </ComboBox>
      </DockPanel>
      <Separator/>
    </StackPanel>    

    <DockPanel>
      <Image Stretch="None" DockPanel.Dock="Left" Margin="3" VerticalAlignment="Center"
             Visibility="{Binding IsUpdating, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
        <Image.Style>
          <Style TargetType="Image">
            <Setter Property="Source" Value="/AxoCover;component/Resources/information.png"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding IsSuccessful}" Value="True">
                <Setter Property="Source" Value="/AxoCover;component/Resources/success.png"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding IsSuccessful}" Value="False">
                <Setter Property="Source" Value="/AxoCover;component/Resources/failure.png"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Image.Style>
      </Image>
      <controls:Spinner DockPanel.Dock="Left" Margin="3" VerticalAlignment="Center"
                        Visibility="{Binding IsUpdating, Converter={StaticResource BooleanToVisibilityConverter}}"/>
      <Button DockPanel.Dock="Right" Margin="3">
        <Button.Style>
          <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding IsSuccessful}" Value="False">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Content" Value="{x:Static res:Resources.RetryUpdate}"/>
                <Setter Property="Command" Value="{Binding RetryUpdateCommand}"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding IsSuccessful}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Content" Value="{x:Static res:Resources.RestartVisualStudio}"/>
                <Setter Property="Command" Value="{Binding RestartCommand}"/>
              </DataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsSuccessful}" Value="{x:Null}"/>
                  <Condition Binding="{Binding IsUpdating}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Content" Value="{x:Static res:Resources.CheckForUpdates}"/>
                <Setter Property="Command" Value="{Binding RefreshCommand}"/>
              </MultiDataTrigger>
            </Style.Triggers>
          </Style>
        </Button.Style>
      </Button>
      <TextBlock VerticalAlignment="Center">
        <TextBlock.Style>
          <Style TargetType="TextBlock" BasedOn="{StaticResource Description}">
            <Setter Property="Text" Value="{Binding ReleaseListUpdateTime, StringFormat={x:Static res:Resources.UpdateCheckTime}}"/>
            <Style.Triggers>              
              <DataTrigger Binding="{Binding IsSuccessful}" Value="True">
                <Setter Property="Text" Value="{Binding InstallingRelease, StringFormat={x:Static res:Resources.UpdateSucceeded}}"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding IsSuccessful}" Value="False">
                <Setter Property="Text" Value="{Binding InstallingRelease, StringFormat={x:Static res:Resources.UpdateFailed}}"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding IsUpdating}" Value="True">
                <Setter Property="Text" Value="{Binding InstallingRelease, StringFormat={x:Static res:Resources.InstallingUpdate}}"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </TextBlock.Style>
      </TextBlock>
    </DockPanel>
  </StackPanel>
</views:View>
