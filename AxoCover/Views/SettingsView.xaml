<views:View x:Class="AxoCover.Views.SettingsView" 
            x:TypeArguments="viewModels:SettingsViewModel"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.11.0"
            xmlns:converters="clr-namespace:AxoCover.Converters"
            xmlns:controls="clr-namespace:AxoCover.Controls"
            xmlns:models="clr-namespace:AxoCover.Models"
            xmlns:viewModels="clr-namespace:AxoCover.ViewModels"
            xmlns:views="clr-namespace:AxoCover.Views"
            xmlns:res="clr-namespace:AxoCover"
            mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">
  <UserControl.Resources>
    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <converters:NotNullToBooleanConverter x:Key="NotNullToBooleanConverter"/>
    <converters:NullToBooleanConverter x:Key="NullToBooleanConverter"/>
    <converters:BooleanInverter x:Key="BooleanInverter"/>
    <converters:EnumToValuesConverter x:Key="EnumToValuesConverter"/>
    <converters:EmptyToBooleanConverter x:Key="EmptyToBooleanConverter"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  </UserControl.Resources>
  <ScrollViewer Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}"
                VerticalScrollBarVisibility="Auto">
    <StackPanel Margin="6,0,6,6">
      <StackPanel.Resources>
        <Style x:Key="Header" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
          <Setter Property="Margin" Value="-6,12,-6,0"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="Label">
                <Border Background="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarGradientBrushKey}}">
                  <ContentPresenter TextBlock.Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}" Margin="3"/>
                </Border>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>

        <Style x:Key="SubHeader" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
          <Setter Property="Margin" Value="3"/>
          <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        
        <Style x:Key="Description" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
          <Setter Property="Margin" Value="3"/>
          <Setter Property="Opacity" Value="0.7"/>
          <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
      </StackPanel.Resources>
      <Border x:Name="_dataContextSource"/>

      <!-- About -->
      <Label Content="{x:Static res:Resources.About}" Style="{StaticResource Header}" Margin="-6,0"/>
      <DockPanel>
        <Image DockPanel.Dock="Right" Source="/AxoCover;component/Resources/icon.png" Stretch="Uniform" Margin="3,6,6,6" Width="64" VerticalAlignment="Top"/>
        <StackPanel VerticalAlignment="Top" Margin="3">
          <Label>
            <TextBlock TextWrapping="Wrap">
              <Run Text="{Binding Manifest.Name, Mode=OneTime}" FontWeight="Bold" FontSize="20px"/>
              <Run Text="{Binding Manifest.Version, Mode=OneTime}" FontSize="16px"/>
              <LineBreak/>
              <Run Text="{Binding Manifest.Description, Mode=OneTime}"/>
            </TextBlock>
          </Label>
          <StackPanel Margin="0,1.5">
            <StackPanel.Resources>
              <Style TargetType="controls:ActionButton">
                <Setter Property="Icon" Value="/AxoCover;component/Resources/open.png"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="0,1.5"/>
              </Style>
            </StackPanel.Resources>
            <controls:ActionButton Text="{x:Static res:Resources.WebSite}" 
                                    Command="{Binding OpenWebSiteCommand}"/>
            <controls:ActionButton Text="{x:Static res:Resources.ReleaseNotes}"
                                    Command="{Binding OpenReleaseNotesDialogCommand}"/>
            <controls:ActionButton Text="{x:Static res:Resources.SourceCode}"
                                    Command="{Binding OpenSourceCodeCommand}"/>
            <controls:ActionButton Text="{x:Static res:Resources.License}"
                                    Command="{Binding OpenLicenseDialogCommand}"/>
          </StackPanel>          
        </StackPanel>
      </DockPanel>

      <!-- Feedback settings -->
      <Label Content="{x:Static res:Resources.Feedback}" Style="{StaticResource Header}"/>
      <TextBlock Text="{x:Static res:Resources.FeedbackDescription}" Style="{StaticResource Description}"/>
      <StackPanel Margin="0,1.5">
        <StackPanel.Resources>
          <Style TargetType="controls:ActionButton">
            <Setter Property="Icon" Value="/AxoCover;component/Resources/open.png"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="0,1.5"/>
          </Style>
        </StackPanel.Resources>        
        <controls:ActionButton Text="{x:Static res:Resources.OpenIssues}" Command="{Binding OpenIssuesCommand}"/>
        <controls:ActionButton Text="{x:Static res:Resources.SendFeedback}" Command="{Binding SendFeedbackCommand}"/>
      </StackPanel>      
      <TextBlock Text="{x:Static res:Resources.TelemetryDescription}" Style="{StaticResource Description}"/>
      <CheckBox Content="{x:Static res:Resources.EnableTelemetry}" IsChecked="{Binding Options.IsTelemetryEnabled}" Margin="3"/>
      <TextBlock Text="{Binding AssemblyVersion, StringFormat={x:Static res:Resources.AssemblyVersion}}" Style="{StaticResource Description}"/>

      <!-- Visualization settings -->
      <Label Content="{x:Static res:Resources.VisualizationSettings}" Style="{StaticResource Header}"/>
      <TextBlock Text="{x:Static res:Resources.VisualAids}" Style="{StaticResource SubHeader}"/>
      <UniformGrid Columns="2">
        <CheckBox Content="{x:Static res:Resources.ShowLineCoverage}" IsChecked="{Binding Options.IsShowingLineCoverage}" Margin="3"/>
        <CheckBox Content="{x:Static res:Resources.ShowBranchCoverage}" IsChecked="{Binding Options.IsShowingBranchCoverage}" Margin="3"/>
        <CheckBox Content="{x:Static res:Resources.ShowPartialCoverage}" IsChecked="{Binding Options.IsShowingPartialCoverage}" Margin="3"/>
        <CheckBox Content="{x:Static res:Resources.ShowExceptions}" IsChecked="{Binding Options.IsShowingExceptions}" Margin="3"/>
      </UniformGrid>
      
      <TextBlock Text="{x:Static res:Resources.CoverageColors}" Style="{StaticResource SubHeader}"/>
      <UniformGrid Columns="2">
        <controls:ColorPicker Text="{x:Static res:Resources.Selected}" Color="{Binding Options.SelectedColor}" Margin="3"/>
        <controls:ColorPicker Text="{x:Static res:Resources.Covered}" Color="{Binding Options.CoveredColor}" Margin="3"/>
        <controls:ColorPicker Text="{x:Static res:Resources.Mixed}" Color="{Binding Options.MixedColor}" Margin="3"/>
        <controls:ColorPicker Text="{x:Static res:Resources.Uncovered}" Color="{Binding Options.UncoveredColor}" Margin="3"/>        
      </UniformGrid>

      <TextBlock Text="{x:Static res:Resources.ExceptionColors}" Style="{StaticResource SubHeader}"/>
      <UniformGrid Columns="2">
        <controls:ColorPicker Text="{x:Static res:Resources.Origin}" Color="{Binding Options.ExceptionOriginColor}" Margin="3"/>
        <controls:ColorPicker Text="{x:Static res:Resources.Trace}" Color="{Binding Options.ExceptionTraceColor}" Margin="3"/>
      </UniformGrid>

      <!-- Coverage settings -->
      <Label Content="{x:Static res:Resources.CoverageSettings}" Style="{StaticResource Header}"/>
      <TextBlock Text="{x:Static res:Resources.CoverByTestDescription}" Style="{StaticResource Description}"/>
      <CheckBox Content="{x:Static res:Resources.IsCoveringByTest}" IsChecked="{Binding Options.IsCoveringByTest}"
                IsEnabled="{Binding Options.IsExcludingTestAssemblies, Converter={StaticResource BooleanInverter}}" Margin="3"/>
      <DockPanel Visibility="{Binding Options.IsExcludingTestAssemblies, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Image Source="/AxoCover;component/Resources/warning.png" Stretch="None" DockPanel.Dock="Left" Margin="3"/>
        <TextBlock Text="{x:Static res:Resources.CoverByTestExcludeByTestAssemblyWarning}" Style="{StaticResource Description}"/>
      </DockPanel>
      
      <TextBlock Text="{x:Static res:Resources.ExcludeAttributes}" Style="{StaticResource SubHeader}"/>
      <TextBlock Text="{x:Static res:Resources.ExcludeAttributesDescription}" Style="{StaticResource Description}"/>
      <controls:ListEditor Margin="3" ValidationPattern="^[\w\.\*]+$" Value="{Binding Options.ExcludeAttributes}"/>

      <TextBlock Text="{x:Static res:Resources.ExcludeFiles}" Style="{StaticResource SubHeader}"/>
      <TextBlock Text="{x:Static res:Resources.ExcludeFilesDescription}" Style="{StaticResource Description}"/>
      <controls:ListEditor Margin="3" Value="{Binding Options.ExcludeFiles}"/>

      <TextBlock Text="{x:Static res:Resources.ExcludeDirectories}" Style="{StaticResource SubHeader}"/>
      <TextBlock Text="{x:Static res:Resources.ExcludeDirectoriesDescription}" Style="{StaticResource Description}"/>
      <controls:ListEditor Margin="3" Value="{Binding Options.ExcludeDirectories}"/>

      <TextBlock Text="{x:Static res:Resources.Filters}" Style="{StaticResource SubHeader}"/>
      <TextBlock Text="{x:Static res:Resources.FiltersDescription}" Style="{StaticResource Description}"/>
      <controls:ListEditor Margin="3" ValidationPattern="[+-]\[[\w\.\*]+\][\w\.\*]+" SplitPattern="[^\s]+" Value="{Binding Options.Filters}"
                           IsEnabled="{Binding IsChecked, Converter={StaticResource BooleanInverter}, ElementName=_isIncludingSolutionAssembliesCheckBox}"/>
      <CheckBox x:Name="_isIncludingSolutionAssembliesCheckBox"
                Content="{x:Static res:Resources.IsIncludingSolutionAssemblies}" IsChecked="{Binding Options.IsIncludingSolutionAssemblies}" Margin="3"/>
      <CheckBox Content="{x:Static res:Resources.IsExcludingTestAssemblies}" IsChecked="{Binding Options.IsExcludingTestAssemblies}" 
                IsEnabled="{Binding Options.IsCoveringByTest, Converter={StaticResource BooleanInverter}}" Margin="3"/>
      <DockPanel Visibility="{Binding Options.IsCoveringByTest, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Image Source="/AxoCover;component/Resources/warning.png" Stretch="None" DockPanel.Dock="Left" Margin="3"/>
        <TextBlock Text="{x:Static res:Resources.CoverByTestExcludeByTestAssemblyWarning}" Style="{StaticResource Description}"/>
      </DockPanel>
      <CheckBox Content="{x:Static res:Resources.IsMergingByHash}" IsChecked="{Binding Options.IsMergingByHash}" Margin="3"/>
      <TextBlock Text="{x:Static res:Resources.IsMergingByHashDescription}" Style="{StaticResource Description}"/>
      <CheckBox Content="{x:Static res:Resources.IsSkippingAutoProps}" IsChecked="{Binding Options.IsSkippingAutoProps}" Margin="3"/>
      <TextBlock Text="{x:Static res:Resources.IsSkippingAutoPropsDescription}" Style="{StaticResource Description}"/>

      <!-- Output directories -->
      <Label Content="{x:Static res:Resources.OutputDirectories}" Style="{StaticResource Header}"/>
      <TextBlock Text="{x:Static res:Resources.OutputDirectorySettingsDescription}" Style="{StaticResource Description}"/>
      <ItemsControl ItemsSource="{Binding OutputDirectories}" Margin="0,6,0,0">
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <DockPanel HorizontalAlignment="Left" Margin="3,0">
              <controls:ActionButton x:Name="_cleanButton" DockPanel.Dock="Right" Margin="3,0,0,0"
                                     Text="{Binding Output.Size, StringFormat={}{0:F2} MB}"
                                     Icon="/AxoCover;component/Resources/clean.png"
                                     CommandParameter="{Binding Output}"
                                     Command="{Binding DataContext.CleanTestOutputCommand, Source={x:Reference _dataContextSource}}"
                                     IsEnabled="{Binding Output, Converter={StaticResource NotNullToBooleanConverter}}"/>
              <controls:ActionButton DockPanel.Dock="Right" Margin="3,0,0,0"
                                     Icon="/AxoCover;component/Resources/open.png"
                                     CommandParameter="{Binding Location}"
                                     Command="{Binding DataContext.OpenPathCommand, Source={x:Reference _dataContextSource}}"/>
              <TextBlock VerticalAlignment="Center" TextTrimming="CharacterEllipsis" 
                         Text="{Binding Name}" ToolTip="{Binding Location}"/>
            </DockPanel>
            <DataTemplate.Triggers>
              <DataTrigger Binding="{Binding Output, Converter={StaticResource NotNullToBooleanConverter}}" Value="False">
                <Setter TargetName="_cleanButton" Property="Text" Value="{x:Static res:Resources.CalculatingOutputSize}"/>
              </DataTrigger>
            </DataTemplate.Triggers>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ItemsControl>

      <!-- Test settings -->
      <Label Content="{x:Static res:Resources.TestSettings}" Style="{StaticResource Header}"/>
      <TextBlock Text="{x:Static res:Resources.TestSettingsDescription}" Style="{StaticResource Description}"/>
      <Grid Margin="3">
        <Grid.Resources>
          <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
            <Setter Property="ItemContainerStyle" Value="{StaticResource RadioButtonItemStyle}"/>
            <Setter Property="ItemsSource" Value="{Binding Path=SelectedValue, RelativeSource={RelativeSource Self}, Converter={StaticResource EnumToValuesConverter}}"/>
            <Setter Property="ItemsPanel">
              <Setter.Value>
                <ItemsPanelTemplate>
                  <UniformGrid Rows="1"/>
                </ItemsPanelTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static res:Resources.TestPlatform}"/>
        <ListBox Grid.Row="0" Grid.Column="1" SelectedValue="{Binding Options.TestPlatform}" />
        <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static res:Resources.TestApartmentState}"/>
        <ListBox Grid.Row="1" Grid.Column="1" SelectedValue="{Binding Options.TestApartmentState}" />
        <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static res:Resources.TestAdapterMode}"/>
        <ListBox Grid.Row="2" Grid.Column="1" SelectedValue="{Binding Options.TestAdapterMode}" />
      </Grid>

      <TextBlock Text="{x:Static res:Resources.RunSettingsDescription}" Style="{StaticResource Description}"/>
      <StackPanel Margin="0,3,0,0">
        <ListBox ItemsSource="{Binding TestSettingsFiles}"
                 SelectedValue="{Binding Options.TestSettings}"
                 ItemContainerStyle="{StaticResource RadioButtonItemStyle}">
          <ListBox.ItemTemplate>
            <DataTemplate>
              <DockPanel>
                <controls:ActionButton Icon="/AxoCover;component/Resources/open.png" DockPanel.Dock="Right" Margin="3,0,0,0"
                                       CommandParameter="{Binding}"
                                       Command="{Binding DataContext.NavigateToFileCommand, Source={x:Reference _dataContextSource}}"/>
                <TextBlock TextTrimming="CharacterEllipsis" Text="{Binding}" VerticalAlignment="Center"/>
              </DockPanel>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
        <RadioButton Margin="3"
                     IsChecked="{Binding Options.TestSettings, Converter={StaticResource EmptyToBooleanConverter}, Mode=OneWay}"
                     Content="{x:Static res:Resources.None}" 
                     Command="{Binding ClearTestSettingsCommand}"/>
      </StackPanel>      

      <!-- Test runners -->
      <StackPanel Visibility="{Binding CanSelectTestRunner, Converter={StaticResource BooleanToVisibilityConverter}}">
        <Label Content="{x:Static res:Resources.TestRunners}" Style="{StaticResource Header}"/>
        <TextBlock Text="{x:Static res:Resources.TestRunnerSettingsDescription}" Style="{StaticResource Description}"/>
        <ListBox Margin="0,3,0,0" ItemsSource="{Binding TestRunners}" SelectedValue="{Binding Options.TestRunner}"
                 ItemContainerStyle="{StaticResource RadioButtonItemStyle}"/>
      </StackPanel>
    </StackPanel>
  </ScrollViewer>
</views:View>
